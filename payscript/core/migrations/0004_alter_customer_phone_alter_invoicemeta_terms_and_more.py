# Generated by Django 5.2.3 on 2025-06-13 11:41

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_customer_invoicemeta_note_invoicemeta_terms_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='customer',
            name='phone',
            field=models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
        ),
        migrations.AlterField(
            model_name='invoicemeta',
            name='terms',
            field=models.TextField(default='Only --- Days Warranty\nNo Burn and Damage Warranty\nNo Replacement after Warranty Time\nNo warranty for "artifacts", "No display", "Burn", "Damage" for Used GPUs\nI.W / INT = international warranty...No responsibility of the Seller(Konnect Komputers)\nNo warranty for Mined(used in Crypto Mining) GPUs etc\nLLW = Limited Local Warranty = 1year Free + 1year/2year Paid warranty'),
        ),
        migrations.AlterField(
            model_name='product',
            name='quantity',
            field=models.PositiveIntegerField(help_text='Quantity must be at least 1', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='product',
            name='rate',
            field=models.DecimalField(decimal_places=2, help_text='Rate must be positive', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))]),
        ),
    ]
